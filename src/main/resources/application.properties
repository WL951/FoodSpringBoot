#应用名称
spring.application.name=springboot-demo

#访问端口号
server.port=8080
#项目访问路径 例如：http://localhost:8080/foodspringboot/login.html
server.servlet.context-path=/foodspringboot
#编码格式
server.tomcat.uri-encoding=utf-8
#session生命周期
server.servlet.session.timeout=30m


# 静态文件请求匹配方式,默认时/**  通过浏览器访问这些静态文件时，发现必须要添加static作为前缀才能访问
#例如public下放入1.jpg，通常访问http://localhost:8080/1.jpg；添加下面的配置，通过http://localhost:8080/upload/1.jpg访问。
#spring.mvc.static-path-pattern=/upload/**
# 修改默认的静态寻址资源目录 多个使用逗号分隔
#同个文件的加载顺序,静态资源文件，Spring Boot 默认会挨个从META/resources > resources > static > public  里面找是否存在相应的资源，如果有则直接返回
#spring.resources.static-locations = classpath:/META-INF/resources/,classpath:/resources/,classpath:/static/,classpath:/public/


#数据库相关配置
#可以自动识别driver-class,可以注释下面driver-class-name
spring.datasource.driver-class-name=oracle.jdbc.OracleDriver
# //本地安装了Oracle,为IP地址或者127.0.0.1或者localhost
spring.datasource.url=jdbc:oracle:thin:@127.0.0.1:1521:orcl
spring.datasource.username=foodadmin
spring.datasource.password=QAZxsw2
spring.datasource.max-idle=10
spring.datasource.max-wait=10000
spring.datasource.min-idle=5
spring.datasource.initial-size=5
#如果不使用默认的数据源 （com.zaxxer.hikari.HikariDataSource）
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource



#别名扫描目录
mybatis.type-aliases-package=com.wl.foodspringboot.Domain
#Mapper.xml扫描目录
mybatis.mapper-locations=classpath:mybatis-mappers/*.xml
#增加打印sql语句，一般用于本地开发测试
mybatis.configuration.log-impl=org.apache.ibatis.logging.stdout.StdOutImpl

#指定文件不进行热部署(默认不被热部署的文件：/META-INF/maven, /META-INF/resources, /resources, /static, /public, or /templates)
#spring.devtools.restart.exclude=static/**,public/**
#手工触发重启
spring.devtools.restart.trigger-file=trigger.txt

#程序启动阶段banner图，banner文件的路径地址
#spring.banner.location=banner.txt  #疑惑：不加这句也能自动加载banner文件


#模板引擎thymeleaf的配置  注意：$表达式只能写在th标签内部
#开发时关闭缓存,不然没法看到实时页面
spring.thymeleaf.cache=false
spring.thymeleaf.mode=HTML5
#前缀
spring.thymeleaf.prefix=classpath:/templates/
#编码
spring.thymeleaf.encoding=UTF-8
#类型
spring.thymeleaf.servlet.content-type=text/html
#名称的后缀
spring.thymeleaf.suffix=.html



#=========redis基础配置=========
spring.redis.database=0
spring.redis.host=192.168.56.101
spring.redis.port=6300
spring.redis.password=123456
# 连接超时时间 单位 ms（毫秒）
spring.redis.timeout=5000
#=========redis线程池设置=========
# 连接池中的最大空闲连接，默认值也是8。
spring.redis.jedis.pool.max-idle=200
#连接池中的最小空闲连接，默认值也是0。
spring.redis.jedis.pool.min-idle=200
# 如果赋值为-1，则表示不限制；pool已经分配了maxActive个jedis实例，则此时pool的状态为exhausted(耗尽)。
spring.redis.jedis.pool.max-active=2000
# 等待可用连接的最大时间，单位毫秒，默认值为-1，表示永不超时
spring.redis.jedis.pool.max-wait=1000
#=========redis哨兵(若不使用了单机，则不设置host、port)=========
#spring.redis.sentinel.master=mymaster
#spring.redis.sentinel.nodes=192.168.56.102:26379


#=========消息队列active=========
#192.168.56.101下的ActiveMQ 的管理端口为8162（映射到容器8161）  服务端口为61617（映射到容器61616）
spring.activemq.broker-url=tcp://192.168.56.101:61617
#集群配置
#spring.activemq.broker-url=failover:(tcp://localhost:61616,tcp://localhost:61617)
spring.activemq.user=foodadmin
spring.activemq.password=1qazxsw2
#下列配置要增加依赖（线程池）
spring.activemq.pool.enabled=true
spring.activemq.pool.max-connections=500
#default point to point 默认是点对点模式，加了下面的就是发布-订阅模式
#spring.jms.pub-sub-domain=true  (如果要同时支持两种模式，就将该配置注释，在启动类定义topic独立的JmsListenerContainer)
